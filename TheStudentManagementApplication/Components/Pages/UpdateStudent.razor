@page "/UpdateStudent/{studentID:int}"
@rendermode InteractiveServer
@using TheStudentManagementApplication.Models
@inject NavigationManager Navigation
@inject TheStudentManagementApplication.Services.IStudentService StudentService
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "Administrator")]

<PageTitle>Update An Existing Student Information</PageTitle>

<br />

<h3 class="text-center font-weight-bold">Update An Existing Student Information</h3>

<br />

@if (student != null)
{


    <EditForm Model="@student" OnValidSubmit="UpdateTheStudent" class="StudentUpdateForm table-bordered">
    
    <DataAnnotationsValidator/>

        <div class="form-row">


            <div class="form-group col-md-6">
                <label for="indexNumber" class="font-weight-bold">Index Number : </label>
                <InputNumber class="form-control" id="indexNumber" @bind-Value="student.IndexNumber" />
                <ValidationMessage For="@(() => student.IndexNumber)"></ValidationMessage>
            </div>


            <div class="form-group col-md-6">
                <p></p>
            </div>


            <div class="form-group col-md-6">
                <label for="firstName" class="font-weight-bold">First Name : </label>
                <InputText class="form-control" id="firstName" @bind-Value="student.FirstName" placeholder="E.g. : Kasun" />
                <ValidationMessage For="@(() => student.FirstName)"></ValidationMessage>
            </div>


            <div class="form-group col-md-6">
                <label for="lastName" class="font-weight-bold">Last Name : </label>
                <InputText class="form-control" id="lastName" @bind-Value="student.LastName" placeholder="E.g. : Perera" />
                <ValidationMessage For="@(() => student.LastName)"></ValidationMessage>
            </div>


            <div class="form-group col-md-6">
                <label for="classRoom" class="font-weight-bold">Class Room : </label>
                <InputText class="form-control" id="classRoom" @bind-Value="student.ClassRoom" placeholder="E.g. : 10 - B" />
                <ValidationMessage For="@(() => student.ClassRoom)"></ValidationMessage>
            </div>


            <div class="form-group col-md-6">
                <label for="telNo" class="font-weight-bold">Telephone Number : </label>
                <InputText class="form-control" id="TelNo" @bind-Value="student.TeleNumber" placeholder="E.g. : 0771113344" />
                <ValidationMessage For="@(() => student.TeleNumber)"></ValidationMessage>
            </div>

            <br />
            <br />


            <fieldset>
                <legend>Address : </legend>
                <div class="form-group col-md-12">
                    <label for="addressNo" class="font-weight-bold">No. : </label>
                    <InputText class="form-control" id="addressNo" @bind-Value="student.AddressNumber" placeholder="E.g. : 33/5" />
                    <ValidationMessage For="@(() => student.AddressNumber)"></ValidationMessage>
                </div>
                <div class="form-group col-md-12">
                    <label for="addressRoad" class="font-weight-bold">Road : </label>
                    <InputText class="form-control" id="addressRoad" @bind-Value="student.AddressRoad" placeholder="E.g. : Katugastota Road" />
                    <ValidationMessage For="@(() => student.AddressRoad)"></ValidationMessage>
                </div>
                <div class="form-group col-md-12">
                    <label for="addressCity" class="font-weight-bold">City : </label>
                    <InputText class="form-control" id="addressCity" @bind-Value="student.AddressCity" placeholder="E.g. : Kandy" />
                    <ValidationMessage For="@(() => student.AddressCity)"></ValidationMessage>
                </div>
            </fieldset>

        </div>

        <br />
        <br />

    <div class="form-check text-center">
        <input class="form-check-input border-3" type="checkbox" id="flexCheckDefault" style="width:20px;height:20px" @bind="student.IsActive">
        <label class="form-check-label font-weight-bold" for="flexCheckDefault">
            : This Is An Active Student.
        </label>
    </div>

    <br />
    <br />

    <div class="text-center">
        <button  type="submit" class="btn btn-warning" id="UpdateBtn" >Update The Student Information</button>
        <br />
        <br />
        <button type="button" class="btn btn-secondary" id="CancelBtn" @onclick="Cancel">Cancel</button>

    </div>
    </EditForm>

    <br />
    <br />
}

else
{
    <p>Loading Student Information...</p>
}

@code {

    [Parameter]
    public int studentID { get; set; }

    private Models.TheStudent student;

    protected override async Task OnInitializedAsync()
    {
        student = await StudentService.GetStudentById(studentID);
    }

    private async Task UpdateTheStudent()
    {
        await StudentService.UpdateStudent(student);
        Navigation.NavigateTo("/UpdateDeleteStudent");
    }

    private void Cancel()
    {
        Navigation.NavigateTo("/UpdateDeleteStudent");
    }


}
